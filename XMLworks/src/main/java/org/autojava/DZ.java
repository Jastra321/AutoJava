package org.autojava;

public class DZ {

/*
ДЗ1
Попрактикуйте
Арифметические операторы: +     -     *     /     %     ++     --
Операторы сравнения: ==     !=     >     <     >=     <=
Операторы присваивания: =     +=     -=     *=     /=     %=
.......................................
Просто применяю операторы в программе.
 */
    public void doDZ1() {
        System.out.println("Арифметические операторы: +     -     *     /     %     ++     --");
        System.out.println("Применяем +     -     *     /     %  и получаем некоторое число.");
        Double a = ((8.74 + 3 - 1)/2)%0.005;
        System.out.println(a);
        System.out.println();
        System.out.println("Применяем  ++     -- в постфиксной и префиксной форме.");
        int h = 1;
        int j = ++h;
        //в следующей строке IDE подсвечивает оператор блеклым цветом, подсказывая, что значение не применяется.
        h = h--;
        System.out.println("h = " + h + "; j = " + j + ";");
        System.out.println();

        System.out.println("Операторы сравнения: ==     !=     >     <     >=     <=");
        Boolean k = (h == 1 ? true : false);
        Boolean l = (k != true ? true : false);
        System.out.println("k = " + k + "; l = " + l +";");
        k = ( a > 0 ? true : false);
        l = ( a < 1 ? true : false);
        System.out.println("k = " + k + "; l = " + l +";");
        k = ( h >= 0 ? true : false);
        l = ( h < 1 ? true : false);
        System.out.println("k = " + k + "; l = " + l +";");
        System.out.println();

        System.out.println("Операторы присваивания: =     +=     -=     *=     /=     %=");
        k = l;
        System.out.println("k = " + k + "; l = " + l +";");
        a += h;
        System.out.printf("a = %f\n", a);
        h -= j;
        System.out.println("h = " + h);
        a *= j;
        System.out.printf("a = %f\n", a);
        a /= 2;
        System.out.printf("a = %f\n", a);
        j %= 2;
        System.out.println("j = " + j);
    }

    /*
    ДЗ2
Напишите
if - else
сокращенный if
if - else - if
вложенный if
swith-case
while
do-while
for
for внутри которого if

.......................................
домашка 3:
1. добавить конструкторы с ключевым словом super в дочерние классы
2. применить ключевое слово final для переменной, метода и класса
3. сделайте транспорт абстрактным классом и добавьте в него один абстрактный метод
4. переопредлите абстрактный метод в дочерних классах
5. создайте один неабстрактный метод в классе Transport и переопределите его только в классе Сar. Вызовите этот метод для обьектов классов Сar и Bus в методе main. Обьект класса Car должен вызвать метод из класса Car, а обьект класса Bus из класса Transport
6. примените перегрузку методов. Просто создайте 3 метода с именем printInfo, один метод без параметров, второй принимает String, третий принимает int. Не пишите для этих методов большую логику. Просто выведите на экран для первого метода - "Метод не принимает параметры", второго - "Метод принимает String", третьего - "Метод принимает int". Вызовите эти методе в классе main. Для этих методов можете создать отдельный класс, чтобы они не мазолили глаза в классах Car или Bus
7. создайте дополнительные классы Engine, Radiator, Battery. Используйте их как переменные в классе Car, создайте конструктор для них. В main методе создайте три обьекта для Engine, Radiator, Battery и используйте эти обьекты для создания обьекта Car
8. создайте любые 3 класса. Первый класс должен наследовать второй, второй наследует третий. В третьем классе создайте одну переменную и конструктор для нее. В первом классе и втором конструкторы со словом super для этой переменной
9. во всех классах сделайте переменные приватными, и создайте геттеры и сеттеры для них. Если в проекте появятся ошибки, то почините их. Например, если в main методе вы использовали car.model, то замените на car.getModel() в тех местах, где вы получаете переменную и на car.setModel() в тех местах, где вы присваете значение model

.......................................
 ДЗ 4
Задача 1. Дано две стринги А и B, если A не содержит B, напечатать -1, если содержит, то напечатать индекс из стринги A, с которого начинается стринга B в A
Пример  1:
Исходные данные: A = “asadbut", B = "sad"
Результат: 1

Пример 2:
Исходные данные: A = "leetcode", B = "leeto"
Результат: -1 так как А не содержит В

Задача 2. Есть отсортированный массив и число. Если число есть в массиве то напечатать его индекс. Если числа нету, то напечатайте индекс, где число было бы, если бы оно было вставлено в массив.
Пример 1:
Исходные данные: : nums = [1,3,5,6], число = 5
Результат: 2 - число 5 имеет индекс 2

Пример 2:
Исходные данные: : nums = [1,3,5,6], число = 2
Результат: 1 - числа 2 нету в массиве, но если было бы, то индекс был бы 1, так как число 2 должно находится в массиве между числами 1 и 3

Пример 3:
Исходные данные: : nums = [1,3,5,6], число = 7
Результат: 4 - числа 7 нету в массиве, но если бы было то после числа 6

Задача 3. Есть массив. Напечатать true, если в массивы есть элементы, которые повторяются. Напечатать false, если массив содержит только уникальные числа

Пример 1:
Исходные данные: nums = [1,2,3,1]
Результат: true

Пример 2:
Исходные данные: nums = [1,2,3,4]
Результат: false

.......................................
Домашнее задание 5:
1. Добавить в pom.xml
  <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.12.0</version>
    </dependency>

Если библиотека правильно добавлена то в своем классе вы можете написать StringUtils и вызвать какой-нибудь метод из этого класса, импорт для этого класса будет import org.apache.commons.lang3.StringUtils;
2. Добавить в pom.xml
  <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.15.1</version>
  </dependency>

Если библиотека правильно добавлена то в своем классе вы можете написать FileUtils и вызвать какой-нибудь метод из этого класса, импорт для этого класса будет import org.apache.commons.io.FileUtils;
Писать какую-то логику с StringUtils и FileUtils не надо. Просто убедитесь что библиотеки подключены
3.
-Создайте класс Transport, Car, Bus
-Car и Bus должны наследовать класс Transport;
-создайте в классе Transport поля model, height, weight, maxSpeed
-создайте один метод в классе Transport
-создайте конструкторы в классе Transport: 1 - без параметров, 2 - все параметры, 3 - только с одним параметром
-сделайте одно поле private, одно - default(для default не надо писать модификатор доступа), одно - protected, еще одно public
-создайте гетер и сетер для private переменной
-создайте еще один класс с методом main
-создайте обьекты для Car  и Bus в main методе и вызовите для них метод из класса Transport

.......................................
ДЗ 6
1. Используйте полиморфизм, можете просто напечатать код из занятия или из видео из ютуба
2. Создайте три интерфеса с абстрактными и дефолтными методами
3. Добавьте интерфейсы в классы
4. Переопределите методы в классах из интерфейсов
     */
}
